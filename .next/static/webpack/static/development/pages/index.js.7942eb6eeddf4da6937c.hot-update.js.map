{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.7942eb6eeddf4da6937c.hot-update.js","sources":["webpack:///./pages/app.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Login from \"../components/login\";\r\nimport PostList from \"../components/posts\";\r\nimport Post from \"../components/post\";\r\nimport {SET_TOKEN} from \"../store/actions\";\r\nimport connect from \"react-redux/lib/connect/connect\";\r\n\r\nconst App = ({token}) => {\r\n    const [isLoginPage, setPage] = useState(true);\r\n    const [postId, setPostId] = useState(\"\");\r\n    useEffect(() => {\r\n        const storage = window.localStorage;\r\n        const activePostId = storage.getItem(\"postId\");\r\n        const token = storage.getItem(\"token\");\r\n\r\n        if (!token) {\r\n            setPage(true);\r\n        } else {\r\n            if (activePostId !== \"\") {\r\n                setPostId(activePostId);\r\n                setPage(false);\r\n            } else {\r\n                setPage(false)\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handlePostOpen = (id) => {\r\n        setPostId(id);\r\n        window.localStorage.setItem(\"postId\", id);\r\n    };\r\n\r\n    const handlePostListOpen = () => {\r\n        setPostId(\"\");\r\n        window.localStorage.setItem(\"postId\", \"\");\r\n    };\r\n\r\n    const handleSignIn = (password) => {\r\n        const token = btoa(password);\r\n        SET_ACTIVE_TOKEN(token);\r\n        window.localStorage.setItem(\"token\", token);\r\n        setPage(false);\r\n    };\r\n\r\n    const drawPage = () => {\r\n        if (isLoginPage) {\r\n            return (\r\n                <Login handleSignIn={handleSignIn}/>\r\n            )\r\n        } else if (postId === \"\") {\r\n            return (\r\n                <PostList handlePostOpen={handlePostOpen} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Post handlePostListOpen={handlePostListOpen} id={postId}/>\r\n            )\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                drawPage()\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n    return () => {\r\n        return {\r\n            token: store.token\r\n        }\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    SET_ACTIVE_TOKEN: (token) => dispatch(SET_TOKEN(token)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}