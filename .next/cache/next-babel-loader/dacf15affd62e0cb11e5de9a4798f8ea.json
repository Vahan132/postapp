{"ast":null,"code":"var _jsxFileName = \"E:\\\\postapp\\\\components\\\\post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nconst postStyle = {\n  display: \"flex\",\n  flexDirection: \"column\"\n};\nexport default function Post({\n  handlePostListOpen,\n  id\n}) {\n  const {\n    0: post,\n    1: setPost\n  } = useState(null);\n  useEffect(() => {\n    const storage = window.localStorage;\n    const postsJson = storage.getItem(\"posts\");\n    const posts = JSON.parse(postsJson);\n    const currentPost = posts.find(post => post.id === +id);\n\n    if (!currentPost.comments) {\n      (async () => {\n        const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}/comments`);\n        currentPost.comments = await res.json();\n        window.localStorage.setItem(\"posts\", JSON.stringify(posts));\n        setPost(currentPost);\n      })().catch(error => console.log(error));\n    } else {\n      setPost(currentPost);\n    }\n  }, []);\n\n  const handleBackClick = () => {\n    handlePostListOpen();\n  };\n\n  return __jsx(React.Fragment, null, post ? __jsx(\"div\", {\n    style: postStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 24\n    }\n  }, __jsx(\"button\", {\n    onClick: handleBackClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Back to posts page\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \" User: \", post.userId), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Post Title: \", post.title), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Post Body: \", post.body), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, post.comments && post.comments.map(comment => {\n    console.log(comment);\n    return __jsx(\"li\", {\n      key: comment.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 41\n      }\n    }, \"Username: \", comment.name), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }\n    }, comment.body));\n  }))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Loading...\"));\n}","map":{"version":3,"sources":["E:/postapp/components/post.js"],"names":["useEffect","useState","postStyle","display","flexDirection","Post","handlePostListOpen","id","post","setPost","storage","window","localStorage","postsJson","getItem","posts","JSON","parse","currentPost","find","comments","res","fetch","json","setItem","stringify","catch","error","console","log","handleBackClick","userId","title","body","map","comment","name"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,aAAa,EAAE;AAFD,CAAlB;AAIA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,kBAAD;AAAqBC,EAAAA;AAArB,CAAd,EAAwC;AACnD,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,OAAO,GAAGC,MAAM,CAACC,YAAvB;AACA,UAAMC,SAAS,GAAGH,OAAO,CAACI,OAAR,CAAgB,OAAhB,CAAlB;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAd;AACA,UAAMK,WAAW,GAAGH,KAAK,CAACI,IAAN,CAAYX,IAAD,IAAUA,IAAI,CAACD,EAAL,KAAY,CAACA,EAAlC,CAApB;;AACA,QAAI,CAACW,WAAW,CAACE,QAAjB,EAA2B;AACvB,OACI,YAAY;AACR,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,8CAA6Cf,EAAG,WAAlD,CAAvB;AACAW,QAAAA,WAAW,CAACE,QAAZ,GAAuB,MAAMC,GAAG,CAACE,IAAJ,EAA7B;AACAZ,QAAAA,MAAM,CAACC,YAAP,CAAoBY,OAApB,CAA4B,OAA5B,EAAqCR,IAAI,CAACS,SAAL,CAAeV,KAAf,CAArC;AACAN,QAAAA,OAAO,CAACS,WAAD,CAAP;AACH,OANL,IAOIQ,KAPJ,CAOWC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAPrB;AAQH,KATD,MASO;AACHlB,MAAAA,OAAO,CAACS,WAAD,CAAP;AACH;AAEJ,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,QAAMY,eAAe,GAAG,MAAM;AAC1BxB,IAAAA,kBAAkB;AACrB,GAFD;;AAIA,SACI,4BAEQE,IAAI,GAAG;AAAK,IAAA,KAAK,EAAEN,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAQ,IAAA,OAAO,EAAE4B,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAActB,IAAI,CAACuB,MAAnB,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmBvB,IAAI,CAACwB,KAAxB,CAHG,EAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkBxB,IAAI,CAACyB,IAAvB,CAJG,EAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQzB,IAAI,CAACY,QAAL,IACAZ,IAAI,CAACY,QAAL,CAAcc,GAAd,CAAmBC,OAAD,IAAa;AAC3BP,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACA,WACI;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBD,OAAO,CAACC,IAAxB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,OAAO,CAACF,IAAd,CAFJ,CADJ;AAMH,GARD,CAHR,CALG,CAAH,GAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBZ,CADJ;AA4BH","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nconst postStyle = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n};\r\nexport default function Post({handlePostListOpen, id}) {\r\n    const [post, setPost] = useState(null);\r\n    useEffect(() => {\r\n        const storage = window.localStorage;\r\n        const postsJson = storage.getItem(\"posts\");\r\n        const posts = JSON.parse(postsJson);\r\n        const currentPost = posts.find((post) => post.id === +id);\r\n        if (!currentPost.comments) {\r\n            (\r\n                async () => {\r\n                    const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}/comments`);\r\n                    currentPost.comments = await res.json();\r\n                    window.localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n                    setPost(currentPost);\r\n                }\r\n            )().catch((error) => console.log(error))\r\n        } else {\r\n            setPost(currentPost);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleBackClick = () => {\r\n        handlePostListOpen();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                post ? <div style={postStyle}>\r\n                    <button onClick={handleBackClick}>Back to posts page</button>\r\n                    <span> User: {post.userId}</span>\r\n                    <span>Post Title: {post.title}</span>\r\n                    <span>Post Body: {post.body}</span>\r\n                    <ul>\r\n                        {\r\n                            post.comments &&\r\n                            post.comments.map((comment) => {\r\n                                console.log(comment)\r\n                                return (\r\n                                    <li key={comment.name}>\r\n                                        <div>Username: {comment.name}</div>\r\n                                        <div>{comment.body}</div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div> :\r\n                    <div>Loading...</div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}