{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"E:\\\\postapp\\\\components\\\\posts.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport { error } from \"next/dist/build/output/log\";\n\nfunction PostList() {\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var res, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/posts\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              setPosts(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })()[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Posts Page\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, posts.length !== 0 && posts.map(function (element) {}))); // Render data...\n} // export async function getServerSideProps() {\n//     console.log(\"fetched\");\n//\n//     const res = await fetch(`https://jsonplaceholder.typicode.com/posts`);\n//     const data = await res.json();\n//\n//     return { props: { data } }\n// }\n\n\nexport default PostList;","map":{"version":3,"sources":["E:/postapp/components/posts.js"],"names":["useEffect","useState","error","PostList","posts","setPosts","fetch","res","json","data","console","log","length","map","element"],"mappings":";;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,KAAR,QAAoB,4BAApB;;AAEA,SAASC,QAAT,GAAoB;AAAA,kBACUF,QAAQ,CAAC,EAAD,CADlB;AAAA,MACTG,KADS;AAAA,MACFC,QADE;;AAEhBL,EAAAA,SAAS,CAAC,YAAM;AACZ,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACsBM,KAAK,8CAD3B;;AAAA;AACUC,cAAAA,GADV;AAAA;AAAA,+CAEuBA,GAAG,CAACC,IAAJ,EAFvB;;AAAA;AAEUC,cAAAA,IAFV;AAIIJ,cAAAA,QAAQ,CAACI,IAAD,CAAR;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,aAOU,UAACP,KAAD;AAAA,aAAWQ,OAAO,CAACC,GAAR,CAAYT,KAAZ,CAAX;AAAA,KAPV;AAQH,GATQ,EASN,EATM,CAAT;AAWA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,KAAK,CAACQ,MAAN,KAAiB,CAAjB,IACAR,KAAK,CAACS,GAAN,CAAU,UAACC,OAAD,EAAa,CAEtB,CAFD,CAHR,CAFJ,CADJ,CAbgB,CA0Bf;AACJ,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeX,QAAf","sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport {error} from \"next/dist/build/output/log\";\r\n\r\nfunction PostList() {\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(() => {\r\n        (\r\n            async () => {\r\n                const res = await fetch(`https://jsonplaceholder.typicode.com/posts`);\r\n                const data = await res.json();\r\n\r\n                setPosts(data);\r\n            }\r\n        )().catch((error) => console.log(error))\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div>Posts Page</div>\r\n            <ul>\r\n                {\r\n                    posts.length !== 0 &&\r\n                    posts.map((element) => {\r\n                        \r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n\r\n    )// Render data...\r\n}\r\n\r\n// export async function getServerSideProps() {\r\n//     console.log(\"fetched\");\r\n//\r\n//     const res = await fetch(`https://jsonplaceholder.typicode.com/posts`);\r\n//     const data = await res.json();\r\n//\r\n//     return { props: { data } }\r\n// }\r\n\r\nexport default PostList"]},"metadata":{},"sourceType":"module"}