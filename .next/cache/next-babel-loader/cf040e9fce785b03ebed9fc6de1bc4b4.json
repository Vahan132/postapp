{"ast":null,"code":"var _jsxFileName = \"E:\\\\postapp\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Login from \"../components/login\";\nimport { pageIds } from \"../helpers/constants\";\nimport PostList from \"../components/posts\";\nimport Post from \"../components/post\";\nexport default function Index() {\n  const {\n    0: isLoginPage,\n    1: setPage\n  } = useState(false);\n  const {\n    0: postId,\n    1: setPostId\n  } = useState(\"\");\n  useEffect(() => {\n    const storage = window.localStorage;\n    const page = storage.getItem(\"page\");\n    const postId = storage.getItem(\"postId\");\n\n    if (postId) {\n      setPostId(postId);\n    }\n\n    if (!page) {\n      const postId = storage.getItem(\"postId\");\n      storage.setItem(\"page\", pageIds.loginPage);\n      setPage(true);\n\n      if (postId !== \"\") {\n        setPostId();\n      }\n    }\n  }, []);\n\n  const handlePostOpen = id => {\n    setPostId(id);\n    window.localStorage.setItem(\"postId\", id);\n  };\n\n  const handlePostListOpen = () => {\n    setPostId(\"\");\n    window.localStorage.setItem(\"postId\", \"\");\n    window.localStorage.setItem(\"page\", \"posts\");\n  };\n\n  const handleSignIn = () => {\n    const token = Base64.encode();\n    setPage(false);\n  };\n\n  const drawPage = () => {\n    if (isLoginPage) {\n      return __jsx(Login, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      });\n    } else if (postId === \"\") {\n      return __jsx(PostList, {\n        handlePostOpen: handlePostOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      });\n    } else {\n      debugger;\n      return __jsx(Post, {\n        handlePostListOpen: handlePostListOpen,\n        id: postId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, drawPage());\n}","map":{"version":3,"sources":["E:/postapp/pages/index.js"],"names":["React","useEffect","useState","Login","pageIds","PostList","Post","Index","isLoginPage","setPage","postId","setPostId","storage","window","localStorage","page","getItem","setItem","loginPage","handlePostOpen","id","handlePostListOpen","handleSignIn","token","Base64","encode","drawPage"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,OAAR,QAAsB,sBAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAyBP,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,OAAO,GAAGC,MAAM,CAACC,YAAvB;AACA,UAAMC,IAAI,GAAGH,OAAO,CAACI,OAAR,CAAgB,MAAhB,CAAb;AACA,UAAMN,MAAM,GAAGE,OAAO,CAACI,OAAR,CAAgB,QAAhB,CAAf;;AAEA,QAAIN,MAAJ,EAAY;AACRC,MAAAA,SAAS,CAACD,MAAD,CAAT;AACH;;AAED,QAAI,CAACK,IAAL,EAAW;AACP,YAAML,MAAM,GAAGE,OAAO,CAACI,OAAR,CAAgB,QAAhB,CAAf;AACAJ,MAAAA,OAAO,CAACK,OAAR,CAAgB,MAAhB,EAAwBb,OAAO,CAACc,SAAhC;AACAT,MAAAA,OAAO,CAAC,IAAD,CAAP;;AACA,UAAIC,MAAM,KAAK,EAAf,EAAmB;AACfC,QAAAA,SAAS;AACZ;AACJ;AACJ,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,QAAMQ,cAAc,GAAIC,EAAD,IAAQ;AAC3BT,IAAAA,SAAS,CAACS,EAAD,CAAT;AACAP,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,QAA5B,EAAsCG,EAAtC;AACH,GAHD;;AAKA,QAAMC,kBAAkB,GAAG,MAAM;AAC7BV,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,QAA5B,EAAsC,EAAtC;AACAJ,IAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,MAA5B,EAAoC,OAApC;AACH,GAJD;;AAMA,QAAMK,YAAY,GAAG,MAAM;AACvB,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,EAAd;AACAhB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAHD;;AAKA,QAAMiB,QAAQ,GAAG,MAAM;AACnB,QAAIlB,WAAJ,EAAiB;AACb,aACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,MAIO,IAAIE,MAAM,KAAK,EAAf,EAAmB;AACtB,aACI,MAAC,QAAD;AAAU,QAAA,cAAc,EAAES,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJM,MAIA;AACH;AACA,aACI,MAAC,IAAD;AAAM,QAAA,kBAAkB,EAAEE,kBAA1B;AAA8C,QAAA,EAAE,EAAEX,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ,GAfD;;AAiBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQgB,QAAQ,EAFhB,CADJ;AAOH","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Login from \"../components/login\";\r\nimport {pageIds} from \"../helpers/constants\";\r\nimport PostList from \"../components/posts\";\r\nimport Post from \"../components/post\";\r\n\r\nexport default function Index() {\r\n    const [isLoginPage, setPage] = useState(false);\r\n    const [postId, setPostId] = useState(\"\");\r\n    useEffect(() => {\r\n        const storage = window.localStorage;\r\n        const page = storage.getItem(\"page\");\r\n        const postId = storage.getItem(\"postId\");\r\n\r\n        if (postId) {\r\n            setPostId(postId)\r\n        }\r\n\r\n        if (!page) {\r\n            const postId = storage.getItem(\"postId\");\r\n            storage.setItem(\"page\", pageIds.loginPage);\r\n            setPage(true);\r\n            if (postId !== \"\") {\r\n                setPostId()\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handlePostOpen = (id) => {\r\n        setPostId(id);\r\n        window.localStorage.setItem(\"postId\", id);\r\n    };\r\n\r\n    const handlePostListOpen = () => {\r\n        setPostId(\"\");\r\n        window.localStorage.setItem(\"postId\", \"\");\r\n        window.localStorage.setItem(\"page\", \"posts\");\r\n    };\r\n\r\n    const handleSignIn = () => {\r\n        const token = Base64.encode()\r\n        setPage(false);\r\n    };\r\n\r\n    const drawPage = () => {\r\n        if (isLoginPage) {\r\n            return (\r\n                <Login/>\r\n            )\r\n        } else if (postId === \"\") {\r\n            return (\r\n                <PostList handlePostOpen={handlePostOpen} />\r\n                )\r\n        } else {\r\n            debugger\r\n            return (\r\n                <Post handlePostListOpen={handlePostListOpen} id={postId}/>\r\n            )\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                drawPage()\r\n            }\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}