{"ast":null,"code":"var _jsxFileName = \"E:\\\\postapp\\\\components\\\\posts.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\n\nfunction PostList({\n  handlePostOpen\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  useEffect(() => {\n    (async () => {\n      const res = await fetch(`https://jsonplaceholder.typicode.com/posts`);\n      const data = await res.json();\n      window.localStorage.setItem(\"posts\", JSON.stringify(data));\n      setPosts(data);\n    })().catch(error => console.log(error));\n  }, []);\n\n  const handlePostClick = event => {\n    const id = event.currentTarget.getAttribute(\"data-id\");\n    handlePostOpen(id);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Posts Page\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, posts.length !== 0 && posts.map(element => {\n    return __jsx(\"li\", {\n      key: element.id,\n      onClick: handlePostClick,\n      \"data-id\": element.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }, \"User: \", element.userId), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    }, \"Post Title: \", element.title), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }\n    }, \"Post Body: \", element.body));\n  })));\n}\n\nexport default PostList;","map":{"version":3,"sources":["E:/postapp/components/posts.js"],"names":["useEffect","useState","PostList","handlePostOpen","posts","setPosts","res","fetch","data","json","window","localStorage","setItem","JSON","stringify","catch","error","console","log","handlePostClick","event","id","currentTarget","getAttribute","length","map","element","userId","title","body"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAoC;AAChC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KACI,YAAY;AACR,YAAMM,GAAG,GAAG,MAAMC,KAAK,CAAE,4CAAF,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAArC;AACAH,MAAAA,QAAQ,CAACG,IAAD,CAAR;AACH,KAPL,IAQIO,KARJ,CAQWC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARrB;AASH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMG,eAAe,GAAIC,KAAD,IAAW;AAC/B,UAAMC,EAAE,GAAGD,KAAK,CAACE,aAAN,CAAoBC,YAApB,CAAiC,SAAjC,CAAX;AACApB,IAAAA,cAAc,CAACkB,EAAD,CAAd;AACH,GAHD;;AAKA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQjB,KAAK,CAACoB,MAAN,KAAiB,CAAjB,IACApB,KAAK,CAACqB,GAAN,CAAWC,OAAD,IAAa;AACnB,WACI;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACL,EAAjB;AAAqB,MAAA,OAAO,EAAEF,eAA9B;AAA+C,iBAASO,OAAO,CAACL,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYK,OAAO,CAACC,MAApB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBD,OAAO,CAACE,KAA1B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBF,OAAO,CAACG,IAAzB,CAHJ,CADJ;AAOH,GARD,CAHR,CAFJ,CADJ;AAmBH;;AAED,eAAe3B,QAAf","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nfunction PostList({handlePostOpen}) {\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(() => {\r\n        (\r\n            async () => {\r\n                const res = await fetch(`https://jsonplaceholder.typicode.com/posts`);\r\n                const data = await res.json();\r\n\r\n                window.localStorage.setItem(\"posts\", JSON.stringify(data));\r\n                setPosts(data);\r\n            }\r\n        )().catch((error) => console.log(error))\r\n    }, []);\r\n\r\n    const handlePostClick = (event) => {\r\n        const id = event.currentTarget.getAttribute(\"data-id\");\r\n        handlePostOpen(id)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>Posts Page</div>\r\n            <ul>\r\n                {\r\n                    posts.length !== 0 &&\r\n                    posts.map((element) => {\r\n                        return (\r\n                            <li key={element.id} onClick={handlePostClick} data-id={element.id}>\r\n                                <div>User: {element.userId}</div>\r\n                                <div>Post Title: {element.title}</div>\r\n                                <div>Post Body: {element.body}</div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostList"]},"metadata":{},"sourceType":"module"}