{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"E:\\\\postapp\\\\components\\\\posts.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\n\nfunction PostList(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function _callee() {\n    var fetchData;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            fetchData = function _fetchData() {\n              var response;\n              return _regeneratorRuntime.async(function fetchData$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(PostList.getServerSideProps());\n\n                    case 2:\n                      response = _context.sent;\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            fetchData();\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }); // Render data...\n}\n\nPostList.getServerSideProps = function _callee2() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee2$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"fetched\");\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/posts\"));\n\n        case 3:\n          res = _context3.sent;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", {\n            props: {\n              data: data\n            }\n          });\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default PostList;","map":{"version":3,"sources":["E:/postapp/components/posts.js"],"names":["React","useEffect","useState","PostList","data","posts","setPosts","fetchData","getServerSideProps","response","console","log","fetch","res","json","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,SAASC,QAAT,OAA4B;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACEF,QAAQ,CAAC,EAAD,CADV;AAAA,MACjBG,KADiB;AAAA,MACVC,QADU;;AAExBL,EAAAA,SAAS,CAAC;AAAA,QACSM,SADT;AAAA;AAAA;AAAA;AAAA;AACSA,YAAAA,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAGqBJ,QAAQ,CAACK,kBAAT,EAHrB;;AAAA;AAGIC,sBAAAA,QAHJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMNF,YAAAA,SAAS;;AANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAON,EAPM,CAAT;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXwB,CAiBvB;AACJ;;AAEDJ,QAAQ,CAACK,kBAAT,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BE,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAD0B;AAAA,2CAGRC,KAAK,8CAHG;;AAAA;AAGpBC,UAAAA,GAHoB;AAAA;AAAA,2CAIPA,GAAG,CAACC,IAAJ,EAJO;;AAAA;AAIpBV,UAAAA,IAJoB;AAAA,4CAMnB;AAAEW,YAAAA,KAAK,EAAE;AAAEX,cAAAA,IAAI,EAAJA;AAAF;AAAT,WANmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AASA,eAAeD,QAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nfunction PostList({ data }) {\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(async () => {\r\n        async function fetchData() {\r\n            // You can await here\r\n            const response = await PostList.getServerSideProps();\r\n            // ...\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <ul>\r\n            {\r\n\r\n            }\r\n        </ul>\r\n    )// Render data...\r\n}\r\n\r\nPostList.getServerSideProps = async () => {\r\n    console.log(\"fetched\");\r\n\r\n    const res = await fetch(`https://jsonplaceholder.typicode.com/posts`);\r\n    const data = await res.json();\r\n\r\n    return { props: { data } }\r\n};\r\n\r\nexport default PostList"]},"metadata":{},"sourceType":"module"}