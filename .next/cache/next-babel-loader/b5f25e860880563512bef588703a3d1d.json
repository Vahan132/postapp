{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"E:\\\\postapp\\\\components\\\\post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nexport default function Post(_ref) {\n  var id = _ref.id;\n\n  var _useState = useState(null),\n      post = _useState[0],\n      setPost = _useState[1];\n\n  useEffect(function () {\n    var storage = window.localStorage;\n    var posts = storage.getItem(\"posts\");\n    var currentPost = posts.find(function (post) {\n      return post.id === id;\n    });\n\n    if (!currentPost.comments) {\n      (function _callee() {\n        var res;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(id, \"/comments\")));\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(res.json());\n\n              case 5:\n                currentPost.comments = _context.sent;\n                window.localStorage.setItem(\"posts\", JSON.stringify(posts));\n                setPost(currentPost);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })()[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    }\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"User: \", post.userId, \"Post Title: \", post.title, \"Post Body:\", post.body);\n}","map":{"version":3,"sources":["E:/postapp/components/post.js"],"names":["useEffect","useState","Post","id","post","setPost","storage","window","localStorage","posts","getItem","currentPost","find","comments","fetch","res","json","setItem","JSON","stringify","error","console","log","userId","title","body"],"mappings":";;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,eAAe,SAASC,IAAT,OAAoB;AAAA,MAALC,EAAK,QAALA,EAAK;;AAAA,kBACPF,QAAQ,CAAC,IAAD,CADD;AAAA,MACxBG,IADwB;AAAA,MAClBC,OADkB;;AAE/BL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMM,OAAO,GAAGC,MAAM,CAACC,YAAvB;AACA,QAAMC,KAAK,GAAGH,OAAO,CAACI,OAAR,CAAgB,OAAhB,CAAd;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACG,IAAN,CAAW,UAACR,IAAD;AAAA,aAAUA,IAAI,CAACD,EAAL,KAAYA,EAAtB;AAAA,KAAX,CAApB;;AACA,QAAI,CAACQ,WAAW,CAACE,QAAjB,EAA2B;AACvB,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACsBC,KAAK,sDAA+CX,EAA/C,eAD3B;;AAAA;AACUY,gBAAAA,GADV;AAAA;AAAA,iDAEiCA,GAAG,CAACC,IAAJ,EAFjC;;AAAA;AAEIL,gBAAAA,WAAW,CAACE,QAFhB;AAGIN,gBAAAA,MAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4B,OAA5B,EAAqCC,IAAI,CAACC,SAAL,CAAeV,KAAf,CAArC;AACAJ,gBAAAA,OAAO,CAACM,WAAD,CAAP;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,aAOU,UAACS,KAAD;AAAA,eAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX;AAAA,OAPV;AAQH;AAEJ,GAfQ,EAeN,EAfM,CAAT;AAiBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACWhB,IAAI,CAACmB,MADhB,kBAEiBnB,IAAI,CAACoB,KAFtB,gBAIKpB,IAAI,CAACqB,IAJV,CADJ;AAQH","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nexport default function Post({id}) {\r\n    const [post, setPost] = useState(null);\r\n    useEffect(() => {\r\n        const storage = window.localStorage;\r\n        const posts = storage.getItem(\"posts\");\r\n        const currentPost = posts.find((post) => post.id === id);\r\n        if (!currentPost.comments) {\r\n            (\r\n                async () => {\r\n                    const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}/comments`);\r\n                    currentPost.comments = await res.json();\r\n                    window.localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n                    setPost(currentPost);\r\n                }\r\n            )().catch((error) => console.log(error))\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            User: {post.userId}\r\n            Post Title: {post.title}\r\n            Post Body:\r\n            {post.body}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}