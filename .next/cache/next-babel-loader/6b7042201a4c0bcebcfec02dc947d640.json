{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"E:\\\\postapp\\\\components\\\\post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nexport default function Post(_ref) {\n  var id = _ref.id;\n\n  var _useState = useState(null),\n      post = _useState[0],\n      setPost = _useState[1];\n\n  useEffect(function () {\n    var storage = window.localStorage;\n    var postsJson = storage.getItem(\"posts\");\n    var posts = JSON.parse(postsJson);\n    debugger;\n    var currentPost = posts.find(function (post) {\n      return post.id === +id;\n    });\n\n    if (!currentPost.comments) {\n      (function _callee() {\n        var res;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(id, \"/comments\")));\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(res.json());\n\n              case 5:\n                currentPost.comments = _context.sent;\n                window.localStorage.setItem(\"posts\", JSON.stringify(posts));\n                setPost(currentPost);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })()[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    }\n  }, []);\n  return __jsx(React.Fragment, null, post ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }\n  }, \"User: \", post.userId, \"Post Title: \", post.title, \"Post Body: \", post.body, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, post.comments && post.comments.map(function (comment) {\n    return;\n  }))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Loading...\"));\n}","map":{"version":3,"sources":["E:/postapp/components/post.js"],"names":["useEffect","useState","Post","id","post","setPost","storage","window","localStorage","postsJson","getItem","posts","JSON","parse","currentPost","find","comments","fetch","res","json","setItem","stringify","error","console","log","userId","title","body","map","comment"],"mappings":";;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,eAAe,SAASC,IAAT,OAAoB;AAAA,MAALC,EAAK,QAALA,EAAK;;AAAA,kBACPF,QAAQ,CAAC,IAAD,CADD;AAAA,MACxBG,IADwB;AAAA,MAClBC,OADkB;;AAE/BL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMM,OAAO,GAAGC,MAAM,CAACC,YAAvB;AACA,QAAMC,SAAS,GAAGH,OAAO,CAACI,OAAR,CAAgB,OAAhB,CAAlB;AACA,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAd;AACA;AACA,QAAMK,WAAW,GAAGH,KAAK,CAACI,IAAN,CAAW,UAACX,IAAD;AAAA,aAAUA,IAAI,CAACD,EAAL,KAAY,CAACA,EAAvB;AAAA,KAAX,CAApB;;AACA,QAAI,CAACW,WAAW,CAACE,QAAjB,EAA2B;AACvB,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACsBC,KAAK,sDAA+Cd,EAA/C,eAD3B;;AAAA;AACUe,gBAAAA,GADV;AAAA;AAAA,iDAEiCA,GAAG,CAACC,IAAJ,EAFjC;;AAAA;AAEIL,gBAAAA,WAAW,CAACE,QAFhB;AAGIT,gBAAAA,MAAM,CAACC,YAAP,CAAoBY,OAApB,CAA4B,OAA5B,EAAqCR,IAAI,CAACS,SAAL,CAAeV,KAAf,CAArC;AACAN,gBAAAA,OAAO,CAACS,WAAD,CAAP;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,aAOU,UAACQ,KAAD;AAAA,eAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX;AAAA,OAPV;AAQH;AAEJ,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SACI,4BAEQlB,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACIA,IAAI,CAACqB,MADT,kBAEUrB,IAAI,CAACsB,KAFf,iBAGStB,IAAI,CAACuB,IAHd,EAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQvB,IAAI,CAACY,QAAL,IACAZ,IAAI,CAACY,QAAL,CAAcY,GAAd,CAAkB,UAACC,OAAD,EAAa;AAC3B;AACH,GAFD,CAHR,CAJG,CAAH,GAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfZ,CADJ;AAqBH","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nexport default function Post({id}) {\r\n    const [post, setPost] = useState(null);\r\n    useEffect(() => {\r\n        const storage = window.localStorage;\r\n        const postsJson = storage.getItem(\"posts\");\r\n        const posts = JSON.parse(postsJson);\r\n        debugger\r\n        const currentPost = posts.find((post) => post.id === +id);\r\n        if (!currentPost.comments) {\r\n            (\r\n                async () => {\r\n                    const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}/comments`);\r\n                    currentPost.comments = await res.json();\r\n                    window.localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n                    setPost(currentPost);\r\n                }\r\n            )().catch((error) => console.log(error))\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                post ? <div>\r\n                    User: {post.userId}\r\n                    Post Title: {post.title}\r\n                    Post Body: {post.body}\r\n                    <ul>\r\n                        {\r\n                            post.comments &&\r\n                            post.comments.map((comment) => {\r\n                                return \r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div> :\r\n                    <div>Loading...</div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}